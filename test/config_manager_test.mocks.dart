// Mocks generated by Mockito 5.4.2 from annotations
// in kael_file_browser/test/config_manager_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:kael_file_browser/AssetRepository.dart' as _i4;
import 'package:kael_file_browser/LocalStorageRepository.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [LocalStorageRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalStorageRepository extends _i1.Mock
    implements _i2.LocalStorageRepository {
  MockLocalStorageRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<Map<String, dynamic>?> getConfig() => (super.noSuchMethod(
        Invocation.method(
          #getConfig,
          [],
        ),
        returnValue: _i3.Future<Map<String, dynamic>?>.value(),
      ) as _i3.Future<Map<String, dynamic>?>);
  @override
  _i3.Future<void> setConfig(Map<String, dynamic>? configMap) =>
      (super.noSuchMethod(
        Invocation.method(
          #setConfig,
          [configMap],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [AssetRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAssetRepository extends _i1.Mock implements _i4.AssetRepository {
  MockAssetRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  dynamic loadAssetFile(String? path) => super.noSuchMethod(Invocation.method(
        #loadAssetFile,
        [path],
      ));
}
